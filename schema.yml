openapi: 3.0.3
info:
  title: Your Project API
  version: 1.0.0
  description: Your project description
paths:
  /api/dishes/{id}/:
    get:
      operationId: dishes_retrieve
      description: The class manages to retrieve and modify the dishes
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - dishes
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Dish'
          description: ''
    put:
      operationId: dishes_update
      description: The class manages to retrieve and modify the dishes
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - dishes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Dish'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Dish'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Dish'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Dish'
          description: ''
    patch:
      operationId: dishes_partial_update
      description: The class manages to retrieve and modify the dishes
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - dishes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedDish'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedDish'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedDish'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Dish'
          description: ''
  /api/menus/:
    post:
      operationId: menus_create
      description: The class manages the creation and modification of Menus
      tags:
      - menus
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Menu'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Menu'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Menu'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Menu'
          description: ''
  /api/menus/{id}/:
    put:
      operationId: menus_update
      description: The class manages the creation and modification of Menus
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this menu.
        required: true
      tags:
      - menus
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Menu'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Menu'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Menu'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Menu'
          description: ''
    patch:
      operationId: menus_partial_update
      description: The class manages the creation and modification of Menus
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this menu.
        required: true
      tags:
      - menus
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedMenu'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedMenu'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedMenu'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Menu'
          description: ''
  /api/menus/detail/{id}/:
    get:
      operationId: menus_detail_retrieve
      description: The class manages to return full menu information
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - menus
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MenuDetail'
          description: ''
  /api/menus/filter/:
    get:
      operationId: menus_filter_list
      description: The class manages the filtering and ordering of items from the
        Menu table
      parameters:
      - in: query
        name: created
        schema:
          type: string
          format: date-time
      - in: query
        name: created_from
        schema:
          type: string
          format: date-time
      - in: query
        name: created_up_to
        schema:
          type: string
          format: date-time
      - in: query
        name: modified
        schema:
          type: string
          format: date-time
      - in: query
        name: modified_from
        schema:
          type: string
          format: date-time
      - in: query
        name: modified_up_to
        schema:
          type: string
          format: date-time
      - in: query
        name: name
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      tags:
      - menus
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Menu'
          description: ''
  /api/users/register/:
    post:
      operationId: users_register_create
      description: New user registration.
      tags:
      - users
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /api/users/token/:
    post:
      operationId: users_token_create
      description: |-
        Takes a set of user credentials and returns an access and refresh JSON web
        token pair to prove the authentication of those credentials.
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenObtainPair'
          description: ''
  /api/users/token/refresh/:
    post:
      operationId: users_token_refresh_create
      description: |-
        Takes a refresh type JSON web token and returns an access type JSON web
        token if the refresh token is valid.
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenRefresh'
          description: ''
components:
  schemas:
    Dish:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 200
        description:
          type: string
        price:
          type: string
          format: decimal
          pattern: ^-?\d{0,3}(?:\.\d{0,2})?$
        preparation_time:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        is_vegetarian:
          type: boolean
      required:
      - description
      - id
      - name
      - preparation_time
      - price
    Menu:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        dishes:
          type: array
          items:
            $ref: '#/components/schemas/Dish'
        name:
          type: string
          maxLength: 200
        description:
          type: string
      required:
      - description
      - id
      - name
    MenuDetail:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        dishes:
          type: string
          readOnly: true
        name:
          type: string
          maxLength: 200
        description:
          type: string
      required:
      - description
      - dishes
      - id
      - name
    PatchedDish:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 200
        description:
          type: string
        price:
          type: string
          format: decimal
          pattern: ^-?\d{0,3}(?:\.\d{0,2})?$
        preparation_time:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        is_vegetarian:
          type: boolean
    PatchedMenu:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        dishes:
          type: array
          items:
            $ref: '#/components/schemas/Dish'
        name:
          type: string
          maxLength: 200
        description:
          type: string
    TokenObtainPair:
      type: object
      properties:
        username:
          type: string
          writeOnly: true
        password:
          type: string
          writeOnly: true
        access:
          type: string
          readOnly: true
        refresh:
          type: string
          readOnly: true
      required:
      - access
      - password
      - refresh
      - username
    TokenRefresh:
      type: object
      properties:
        access:
          type: string
          readOnly: true
        refresh:
          type: string
          writeOnly: true
      required:
      - access
      - refresh
  securitySchemes:
    jwtAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
